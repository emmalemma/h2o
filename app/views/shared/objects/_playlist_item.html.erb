<li class="dd-item <%= actual_object.class.to_s.downcase %> listitem listitem<%= item.id %>" id="playlist_item_<%= item.id %>" data-itemid="<%= item.id %>" data-user_id="<%= actual_object.present? ? actual_object.user_id : 'n/a' %>" data-actual_object_id="<%= item.actual_object_id %>" data-nestable="false" data-position="<%= position %>" data-level="<%= recursive_level %>">
  <div class="wrapper <%= "missing_item" if actual_object.nil? %> dd-handle<%= ' ui-accordion-header ui-helper-reset ui-state-default ui-accordion-icons ui-corner-top' if iframe? %>">
    <table><tr>
      <td class="number"><%= parent_index == '' ? "#{index}" : "#{parent_index}.#{index}" %></td>
      <td class="icon-cell">
        <% if actual_object.nil? -%>
        <a href="#" class="icon icon-missing" title=""></a>
        <% else -%>
        <a href="#" class="tooltip icon icon-<%= item.clean_type %>" title="<%= item.type_label %>"></a>
        <% end -%>
      </td>
      <td class="rr-cell">
        <% if item.render_dropdown -%>
        <%= link_to 'Show/Hide More', '#', :class => 'rr rr-closed dd-nodrag', :id => "rr#{item.id}" %>
        <% end -%>
      </td>
      <td class="title-cell">
        <% target = iframe? ? {} : {target: '_blank'} %>
        <% if actual_object.present? && item.actual_object_type == 'Default' -%>
        <%= link_to actual_object.name, actual_object.url, :target => '_blank', :class => "title dd-nodrag #{"private" if !actual_object.public}" %>
        <% elsif actual_object.present? -%>
          <% href = iframe? ? show_path_for_iframe(actual_object) : actual_object %>
        <%= link_to raw(actual_object.name), href, target.merge(data: data_for(actual_object), :class => "title dd-nodrag#{" private" if !actual_object.public}#{" local" if iframe?}") %>
        <% else -%>
        <span class="missing_item">[This resource no longer exists on H2O because its owner deleted it.]</span>
        <% end -%>
        <%= link_to raw('<span class="icon icon-delete dd-nodrag"></span>'), url_for(:controller => 'playlist_items', :action => 'destroy', :id => item),
          :class => "action delete-playlist-item requires_remove" %>
        <%= link_to raw('<span class="icon icon-edit dd-nodrag"></span>'), url_for(:controller => 'playlist_items', :action => 'edit', :id => item),
          :class => "action edit-playlist-item requires_edit" %>
      </td>
    </tr></table>
    <% if item.render_dropdown -%>
    <div class="additional_details">
      <% if actual_object.present? && [Playlist, Collage].include?(actual_object.class) -%>
      <span class="creator_details">
        Original Creator: <%= link_to(actual_object.root.user.simple_display, user_path(actual_object.root.user), :class => "author_link dd-nodrag") %>
      </span>
      <% if actual_object.root != actual_object -%>
      <span class="creator_details">
      Current Version: <%= link_to(actual_object.user.simple_display, user_path(actual_object.user), :class => "author_link dd-nodrag") %>
      </span>
      <% end -%>
      <% end -%>

      <% if actual_object.respond_to?(:description) && actual_object.description != '' -%>
      <div class="item_desc">
        <%= raw actual_object.formatted(:description) %>
      </div>
      <% end -%>
      <% if item.notes.to_s != '' && item.public_notes -%>
      <div class="notes">
        <b>Notes:</b><br /><%= item.formatted(:notes) %>
      </div>
      <% end -%>
      <% if recursive_level == 5 && item.actual_object_type == 'Playlist' && @nested_playlists.has_key?("Playlist-#{item.actual_object_id}") %>
      <%= link_to "[click to show contents]", playlist_path(item.actual_object), :class => "nested_limit" %>
      <% end -%>
    </div>
    <% end -%>
  </div>
  <% if recursive_level < 5 && item.actual_object_type == 'Playlist' && @nested_playlists.has_key?("Playlist-#{item.actual_object_id}") %>
  <% nested_playlist = @nested_playlists["Playlist-#{item.actual_object_id}"] %>
  <ol class="dd-list" data-counter_start="<%= nested_playlist.counter_start %>">
  <% if nested_playlist.playlist_items.any? -%>
    <% nested_playlist.playlist_items.each_with_index do |nested_item, nested_index| -%>
    <%= render :partial => 'shared/objects/playlist_item',
      :locals => { :item => nested_item,
      :actual_object => nested_item.actual_object,
      :parent_index => parent_index == '' ? index : "#{parent_index}.#{index}",
      :index => nested_index + 1,
      :position => nested_index,
      :recursive_level => recursive_level + 1 } %>
    <% end -%>
  <% end -%>
  </ol>
  <% end -%>
 </li>
